<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>属性型指令</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H2 id=指令概览 
style='FONT-SIZE: 22px; FONT-FAMILY: Roboto, "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 500; COLOR: ; FONT-STYLE: normal; CLEAR: both; MARGIN: 32px 0px 24px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(250,250,250); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal' 
translation-result="">指令概览</H2>
<P 
style='FONT-SIZE: 14px; FONT-FAMILY: Roboto, "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: ; FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: 0px; LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(250,250,250); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal' 
translation-result="">在 Angular 中有三种类型的指令：</P>
<OL 
style='FONT-SIZE: 14px; FONT-FAMILY: Roboto, "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: ; FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: 0px; LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(250,250,250); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>
  <LI 
  style="FONT-SIZE: 14px; FONT-WEIGHT: 400; MARGIN: 4px 0px; LETTER-SPACING: 0px; LINE-HEIGHT: 24px">
  <P 
  style="FONT-SIZE: 14px; FONT-WEIGHT: 400; MARGIN: 0px; LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
  translation-result="">组件 — 拥有模板的指令</P></LI>
  <LI 
  style="FONT-SIZE: 14px; FONT-WEIGHT: 400; MARGIN: 4px 0px; LETTER-SPACING: 0px; LINE-HEIGHT: 24px">
  <P 
  style="FONT-SIZE: 14px; FONT-WEIGHT: 400; MARGIN: 0px; LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
  translation-result="">结构型指令 — 通过添加和移除 DOM 元素改变 DOM 布局的指令</P></LI>
  <LI 
  style="FONT-SIZE: 14px; FONT-WEIGHT: 400; MARGIN: 4px 0px; LETTER-SPACING: 0px; LINE-HEIGHT: 24px">
  <P 
  style="FONT-SIZE: 14px; FONT-WEIGHT: 400; MARGIN: 0px; LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
  translation-result="">属性型指令 — 改变元素、组件或其它指令的外观和行为的指令。</P></LI></OL>
<P 
style='FONT-SIZE: 14px; FONT-FAMILY: Roboto, "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: ; FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: 0px; LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(250,250,250); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal' 
translation-result=""><EM style="LETTER-SPACING: 0px">组件</EM>是这三种指令中最常用的。 你在<A 
style="FONT-SIZE: 14px; TEXT-DECORATION: none; FONT-WEIGHT: 400; COLOR: rgb(25,118,210); LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
href="https://angular.cn/guide/quickstart">快速上手</A>例子中第一次见到组件。</P>
<P 
style='FONT-SIZE: 14px; FONT-FAMILY: Roboto, "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: ; FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: 0px; LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(250,250,250); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal' 
translation-result=""><EM style="LETTER-SPACING: 0px">结构型</EM>指令修改视图的结构。例如，<A 
style="FONT-SIZE: 14px; TEXT-DECORATION: none; FONT-WEIGHT: 400; COLOR: rgb(25,118,210); LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
href="https://angular.cn/guide/template-syntax#ngFor">NgFor</A><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>和<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><A 
style="FONT-SIZE: 14px; TEXT-DECORATION: none; FONT-WEIGHT: 400; COLOR: rgb(25,118,210); LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
href="https://angular.cn/guide/template-syntax#ngIf">NgIf</A>。 要了解更多，参见<A 
style="FONT-SIZE: 14px; TEXT-DECORATION: none; FONT-WEIGHT: 400; COLOR: rgb(25,118,210); LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
href="https://angular.cn/guide/structural-directives">结构型指令</A><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>guide。</P>
<P 
style='FONT-SIZE: 14px; FONT-FAMILY: Roboto, "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: ; FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: 0px; LINE-HEIGHT: 24px; BACKGROUND-COLOR: rgb(250,250,250); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal' 
translation-result=""><EM 
style="LETTER-SPACING: 0px">属性型</EM>指令改变一个元素的外观或行为。例如，内置的<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><A 
style="FONT-SIZE: 14px; TEXT-DECORATION: none; FONT-WEIGHT: 400; COLOR: rgb(25,118,210); LETTER-SPACING: 0px; LINE-HEIGHT: 24px" 
href="https://angular.cn/guide/template-syntax#ngStyle">NgStyle</A><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>指令可以同时修改元素的多个样式。</P>
<H2 id=写个测试程序试验下 
style='FONT-SIZE: 22px; FONT-FAMILY: Roboto, "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: 500; COLOR: ; FONT-STYLE: normal; CLEAR: both; MARGIN: 32px 0px 24px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(250,250,250); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal' 
translation-result="">写个测试程序试验下</H2>
<P>1、在组件中引用指令</P>
<P><SPAN class=tag 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,136); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>&lt;p</SPAN><SPAN 
class=pln 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'> 
[</SPAN><SPAN class=atn 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(102,0,102); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>appHighlight</SPAN><SPAN 
class=pln 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>]</SPAN><SPAN 
class=pun 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(102,102,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>=</SPAN><SPAN 
class=atv 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(136,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>"color"</SPAN><SPAN 
class=tag 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,136); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>&gt;</SPAN><SPAN 
class=pln 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>Highlight 
me!</SPAN><SPAN class=tag 
style='FONT-SIZE: 12px; FONT-FAMILY: "Droid Sans Mono", monospace; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,136); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 24px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-variant-ligatures: normal; font-variant-caps: normal'>&lt;/p&gt;</SPAN></P>
<P>2、在组件中定义color的值</P>export class AppComponent {<BR>&nbsp; 
color: string;<BR>}
<P>3、可定制属性，新建ts文件</P>
<P>import { Directive, ElementRef, HostListener, Input } 
from <A href="mailto:'@angular/core'">'@angular/core'</A>;</P>
<P>@Directive({<BR>&nbsp; selector: 
'[appHighlight]'<BR>})<BR>export class HighlightDirective {</P>
<P>&nbsp; constructor(private el: ElementRef) { }</P>
<P>&nbsp; @Input() defaultColor: string;</P>
<P>&nbsp; @Input('appHighlight') highlightColor: string;</P>
<P>&nbsp; @HostListener('mouseenter') onMouseEnter() 
{<BR>&nbsp;&nbsp;&nbsp; this.highlight(this.highlightColor || this.defaultColor 
|| 'red');<BR>&nbsp; }</P>
<P>&nbsp; @HostListener('mouseleave') onMouseLeave() 
{<BR>&nbsp;&nbsp;&nbsp; this.highlight(null);<BR>&nbsp; }</P>
<P>&nbsp; private highlight(color: string) 
{<BR>&nbsp;&nbsp;&nbsp; this.el.nativeElement.style.backgroundColor = 
color;<BR>&nbsp; }<BR>}</P>
<P><FONT color=#ff0000>切记添加到app.module.ts中</FONT></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P></body>
</html>
