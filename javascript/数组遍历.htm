<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>数组遍历</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H1 id=articleHeader0 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 10px; FONT: 500 2.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">ES5和ES6数组遍历方法详解</H1>
<H3 id=articleHeader1 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.5em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">在ES5中常用的10种数组遍历方法:</H3>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BACKGROUND: rgb(246,246,246); WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; PADDING-LEFT: 20px; MARGIN: 1.5em 0px; BORDER-LEFT: rgb(0,154,97) 2px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 20px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
  <P style="BOX-SIZING: border-box; MARGIN: 0px">1、原始的for循环语句<BR 
  style="BOX-SIZING: border-box">2、Array.prototype.forEach数组对象内置方法<BR 
  style="BOX-SIZING: border-box">3、Array.prototype.map数组对象内置方法<BR 
  style="BOX-SIZING: border-box">4、Array.prototype.filter数组对象内置方法<BR 
  style="BOX-SIZING: border-box">5、Array.prototype.reduce数组对象内置方法<BR 
  style="BOX-SIZING: border-box">6、Array.prototype.some数组对象内置方法<BR 
  style="BOX-SIZING: border-box">7、Array.prototype.every数组对象内置方法<BR 
  style="BOX-SIZING: border-box">8、Array.prototype.indexOf数组对象内置方法<BR 
  style="BOX-SIZING: border-box">9、Array.prototype.lastIndexOf数组对象内置方法<BR 
  style="BOX-SIZING: border-box">10、for...in循环语句</P></BLOCKQUOTE>
<H3 id=articleHeader2 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.5em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">ES6中新增加了一种：</H3>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BACKGROUND: rgb(246,246,246); WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; PADDING-LEFT: 20px; MARGIN: 1.5em 0px; BORDER-LEFT: rgb(0,154,97) 2px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 20px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
  <P style="BOX-SIZING: border-box; MARGIN: 0px">1.for...of循环语句</P></BLOCKQUOTE>
<H3 id=articleHeader3 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.5em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">ES5三种数组循环示例如下：</H3>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">原始for循环语句</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example1</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;a.length;i++){
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a[i]);  <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果依次为1，2，3</SPAN>
}</CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读：</EM></STRONG>原始for循环的优点在于大家都比较熟悉，容易理解，劣势是写起来比较繁琐，需要定义额外更多的变量，所以一下是针对于原始for循环的改良的两种写法：<BR 
style="BOX-SIZING: border-box"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example1</EM></STRONG>：写法改良版</P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=a.length;i--;){
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a[i]);  <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果依次为3，2，1</SPAN>
}</CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example2</EM></STRONG>：性能改良版</P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(i = <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>,len=a.length; i &lt; len; i++) {
   <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a[i]);  <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果依次为1，2，3</SPAN>
}</CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">注意</STRONG>:以上代码可以写成这样呢，如果懵逼了的话接着看原始for循环的解读,我们都知道for循环包含三个语句块——&gt;<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">for(语句1；语句2；语句3）{被执行的代码}</STRONG>，其中，<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">语句1</STRONG>一般为<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">变量定义语句</STRONG>（不仅可以只定义一个变量哦），在<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">循环开始前</STRONG>执行，而且<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">只执行一次</STRONG>；<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">语句2</STRONG>定义循环的是否继续执行的条件，同样也是在<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">循环开始前</STRONG>执行，<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">语句1</STRONG>之后执行，每次<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">重新开始循环都会再次执行</STRONG>；<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">语句3</STRONG>则在<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">循环结束之后执行</STRONG>，并且<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">每次结束的时候都会再次执行</STRONG>，这里要注意的是如果被执行的代码<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">中途return</STRONG>出来了那是不会再执行一次<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">语句3</STRONG>的，所以以上代码解释如下：因为<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">i--</STRONG>这个语句在每次循环开始前都会再次先用<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">i</STRONG><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>是true和false来判断是否继续执行，这里同样要注意的是由于<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">i--</STRONG>和<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">--i</STRONG>的区别，这里由于是<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">i--</STRONG>所以会先判断i的值再去做‘减减’的操作，所以这里最后如果打印<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">i</STRONG><SPAN 
class=Apple-converted-space>&nbsp;</SPAN>的值，会发现其实是<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">-1</STRONG>。</P>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">数组内置方法Array.prototype.forEach</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
a.forEach(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arr</SPAN>)</SPAN>{
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value)    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结尾依次为0，1，2</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arr)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]，该参数貌似没什么用</SPAN>
})</CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读：</EM></STRONG>forEach方法最大的好处就是便于使用，而且不用定义额外的参数变量，但是从效率以及性能角度来说它是劣于原始for循环的，而且也不能强制return结束循环，原因如下：</P><PRE class="hljs asciidoc" style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 0px 0px 1.5em; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal">*<SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*forEach循环*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*一看就是通过*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*回调函数*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*来提供参数的，而回调函数在JS中是*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*闭包*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*的一种，闭包的作用是用来生成*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*私有作用域*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*的，所以，每一个回调函数都是一个*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*独立的作用域*</SPAN><SPAN class=hljs-strong style="BOX-SIZING: border-box; FONT-WEIGHT: bold">*，都拥有自己独立的存储空间，互不影响，而且内部变量还不及时释放，这也就是为什么在能不用闭包的情况下就不要用闭包的原因，而在闭包中return的话，也只是在当前回调函数中返回了，可是forEach中的其他的回调函数（闭包）仍然存在，所以，导致return是没办法结束循环的。下面写一个forEach循环实现例子供大家参考理解：
</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example</EM></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.forEachCopy = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">callback</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;arr.length;i++){
        callback(arr[i],i,<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>);
    }
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
a.forEachCopy(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arr</SPAN>)</SPAN>{
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value)    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结尾依次为0，1，2</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arr)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]</SPAN>
})</CODE></PRE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">数组内置方法Array.prototype.map</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.map(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arr</SPAN>)</SPAN>{
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value)    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结尾依次为0，1，2</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arr)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]</SPAN>
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> value+<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 2, 3, 4 ]</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读：</EM></STRONG>map和forEach不同，在forEach中return语句是没有任何效果的，而map则可以<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">改变当前循环的值</STRONG>，并且最终会<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">返回一个新的被改变过值之后的数组</STRONG>（map如果不用return就和forEach一样了），由于这个特性，<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">map一般用来处理需要修改某一个数组的值</STRONG>。map和forEach在其他的方面都是一样的，也不能return结束循环等特性，下面写一个map循环实现的例子供大家参考理解：<BR 
style="BOX-SIZING: border-box"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example</EM></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.mapCopy = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">callback</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arrCopy = [];
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;arr.length;i++){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> cbValue = callback(arr[i],i,<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>);
        arrCopy.push(cbValue);
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> arrCopy;
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.mapCopy(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arr</SPAN>)</SPAN>{
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value)    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结尾依次为0，1，2</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arr)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]</SPAN>
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> value+<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 2, 3, 4 ]</SPAN></CODE></PRE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">数组内置方法Array.prototype.filter</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.filter(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arr</SPAN>)</SPAN>{
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value)    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结尾依次为0，1，2</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arr)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]</SPAN>
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">if</SPAN>(value === <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>){
      <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">false</SPAN>;
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">true</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1,2 ]</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读：</EM></STRONG>filter和map不同，map目的是为了<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">改变值</STRONG>，而filter目的是为了<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">去掉不要的值</STRONG>，在循环的时候如果返回的是false那么就表示本次循环的不添加该值，返回true则相反是表示要添加到新建的数组中，下面写一个filter循环实现例子供大家参考：<BR 
style="BOX-SIZING: border-box"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.filterCopy = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">callback</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arrCopy = [];
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;arr.length;i++){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> cbValue = callback(arr[i],i,<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>);
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">if</SPAN>(cbValue){
          arrCopy.push(arr[i]);
        }
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> arrCopy;
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.filterCopy(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arr</SPAN>)</SPAN>{
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value)    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结尾依次为0，1，2</SPAN>
    <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arr)      <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]</SPAN>
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">if</SPAN>(value === <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>){
      <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">false</SPAN>;
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">true</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1,2 ]</SPAN></CODE></PRE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">数组内置方法Array.prototype.reduce</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.reduce(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> (<SPAN class=hljs-params style="BOX-SIZING: border-box">count, value,key,arry</SPAN>) </SPAN>{
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(count);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1，3</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key);     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1，2</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arry)     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]</SPAN>
  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> count + value;
},<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>);
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b)          <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为6</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读：</EM></STRONG>reduce的不同之处在于累加，和其他几个内置方法不同的地方，它的第二个参数不是this对象，而是初始累加值（如果不设置的话数组会乱掉），而且回调函数的的个数也不同，比其他的多了一个，而且还在在开始的多加了一个参数，第一个参数记录的是上一次循环的累加值，下面写一个reduce循环实现例子供大家参考：<BR 
style="BOX-SIZING: border-box"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example</EM></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.reduceCopy = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">callback,countInit</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;arr.length;i++){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> cbValue = callback(countInit,arr[i],i,<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>);
        countInit = cbValue;
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> countInit;
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.reduceCopy(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> (<SPAN class=hljs-params style="BOX-SIZING: border-box">count, value,key,arry</SPAN>) </SPAN>{
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(count);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1，3</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key);     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1，2</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arry)     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 三次结果都为[1,2,3]</SPAN>
  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> count + value;
},<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>);
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b)          <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为6</SPAN></CODE></PRE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">数组内置方法Array.prototype.some</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.some(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arry</SPAN>)</SPAN>{
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key);     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arry);    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 两次次结果都为[1,2,3]</SPAN>
  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> value===<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为true</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读：</EM></STRONG>some的不同之处在它返回的布尔值，它的作用有点像filter，不过它的目的不是为了筛选返回数组，而是为了筛选该数组是否有满足你要的值，而且找到符合条件的值返回了一次true之后就不会再继续执行了，下面写一个some循环实现例子供大家参考：</P>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example</EM></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.someCopy = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">callback,countInit</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> isBool = <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">false</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;arr.length;i++){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> cbValue = callback(arr[i],i,<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>);
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">if</SPAN>(cbValue){
          isBool = <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">true</SPAN>;
          <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> isBool
        }
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> isBool;
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.someCopy(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arry</SPAN>)</SPAN>{
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key);     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arry);    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 两次次结果都为[1,2,3]</SPAN>
  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> value===<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为true</SPAN></CODE></PRE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT color=#ff0000>数组内置方法Array.prototype.every</FONT></H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><FONT color=#ff0000>Example</FONT></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><FONT color=#ff0000><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.every(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arry</SPAN>)</SPAN>{
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key);     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arry);    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 两次次结果都为[1,2,3]</SPAN>
  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> value===<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为false</SPAN></FONT></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT color=#ff0000><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读</EM></STRONG>：其实从看例子可以看出来，some和every作用是一样的，只不过some当找到之后返回的是true，而every找到之后返回的是false而已,下面写一个every循环实现例子供大家参考：</FONT></P>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box"><FONT color=#ff0000>Example</FONT></EM></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><FONT color=#ff0000><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.everyCopy = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">callback</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> isBool = <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">true</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;arr.length;i++){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> cbValue = callback(arr[i],i,<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>);
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">if</SPAN>(cbValue){
          isBool = <SPAN class=hljs-literal style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">false</SPAN>;
          <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> isBool
        }
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> isBool;
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.everyCopy(<SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value,key,arry</SPAN>)</SPAN>{
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value);   <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key);     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为0，1</SPAN>
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(arry);    <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 两次次结果都为[1,2,3]</SPAN>
  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> value===<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>;
})
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为false</SPAN></FONT></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.indexOf(<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>);
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为1</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读</EM></STRONG>：对于indexOf方法来说，在数组循环过程中会和传入的参数比对，如果是比对成功，那么终止循环，返回对比成功的下标，下面写一个indexOf循环实现例子供大家参考：</P>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example</EM></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.indexOfCopy = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> index = <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">-1</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>;i&lt;arr.length;i++){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">if</SPAN>(arr[i] === value){
          index = i;
          <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> index
        }
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> index;
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.indexOfCopy(<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>);
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为1</SPAN></CODE></PRE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">数组内置方法Array.prototype.lastIndexOf</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.lastIndexOf(<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>);
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3, 1 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为1</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读</EM></STRONG>：lastIndexOf方法和indexOf作用一致，但查找方向不同，indexOf是正向查找，lastIndexOf是你像查找，找到之后返回成功的下标，下面写一个lastIndexOf循环实现例子供大家参考：</P>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">Example</EM></STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">Array</SPAN>.prototype.lastIndexOf = <SPAN class=hljs-function style="BOX-SIZING: border-box"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN>(<SPAN class=hljs-params style="BOX-SIZING: border-box">value</SPAN>)</SPAN>{
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> arr =  <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">this</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> index = <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">-1</SPAN>;
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> i=arr.length;i--;){
        <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">if</SPAN>(arr[i] === value){
          index = i;
          <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> index
        }
    }
    <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> index;
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = a.lastIndexOf(<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>);
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为[ 1, 2, 3 , 1 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(b);         <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果为3</SPAN></CODE></PRE>
<BLOCKQUOTE 
style="BOX-SIZING: border-box; BACKGROUND: rgb(246,246,246); WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(85,85,85); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; PADDING-LEFT: 20px; MARGIN: 1.5em 0px; BORDER-LEFT: rgb(0,154,97) 2px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 20px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
  <P 
  style="BOX-SIZING: border-box; MARGIN: 0px">小结：对于以上8个数组的内置方法，forEach方法仅仅只是为了循环，并不可以帮你做额外的事情；map方法相当于在循环的时候你告诉数组当前遍历的这个值需要改成什么样，那么它就会最后给什么样的数组；filter方法相当于在循环的时候数组遍历一个个对象，并问你这个是不是你要找的值，如果你说是，他就会给你返回一个到新的数组中，不是他就会剔除；reduce方法相当于循环遍历对象做统计（累加或者累减之类的）;some和every方法相当于在遍历的时候拿着一个个对象问你这个是不是你找的，只要你说了一遍是，那么他就会给你分别返回的是true和false；indexOf和lastIndexOf方法相当于你告诉它你要找什么值，找到之后立马返回给你它的门牌号。</P></BLOCKQUOTE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">循环语句for...in</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> key <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">in</SPAN> a){
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果为依次为0，1，2</SPAN>
}
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> b = {<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>};
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> key <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">in</SPAN> b){
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果为依次为0，1，2</SPAN>
}</CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读</EM></STRONG>：从结果得知,for...in遍历数组的时候是遍历数组的下标值，而在遍历对象的时候遍历的是key值，所以猜想，数组在JS中，本质上也是一个以键值对形式存在的对象，而为了证明这点，我们做如下一个例子的实验：</P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [];
a[<SPAN class=hljs-string style="BOX-SIZING: border-box; COLOR: rgb(221,17,68)">'b'</SPAN>] = <SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>;
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a);     <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果为[ b: 2 ]</SPAN>
<SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(a[<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">0</SPAN>]);  <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果为undefined</SPAN></CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">我们发现数组的下标不在对应相应位置的值了，由此可以证明在JS中数组其实本质上就是一个以<STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">下标为key值</STRONG>的对象。<BR 
style="BOX-SIZING: border-box">当然对于for...in循环语句本身而言，它是一个浅度遍历对象的循环语句，值遍历第一层节点（当然对象中设置不可枚举的属性的除外）。<BR 
style="BOX-SIZING: border-box"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = {<SPAN class=hljs-attr style="BOX-SIZING: border-box">b</SPAN>:{<SPAN class=hljs-attr style="BOX-SIZING: border-box">c</SPAN>:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>},<SPAN class=hljs-attr style="BOX-SIZING: border-box">d</SPAN>:{<SPAN class=hljs-attr style="BOX-SIZING: border-box">c</SPAN>:<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">4</SPAN>}};
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> key <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">in</SPAN> a){
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(key); <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">//结果为依次为b,d</SPAN>
}</CODE></PRE>
<H4 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 1.25em/1.2 -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">ES6循环for...of语句</H4>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Example</STRONG></P><PRE style="BOX-SIZING: border-box; OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: medium none; BORDER-RIGHT: medium none; BACKGROUND: url(../img/blueprint.png); WORD-SPACING: 0px; BORDER-BOTTOM: medium none; POSITION: relative; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; FONT: 0.93em/1.45 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; PADDING-LEFT: 1em; MARGIN: 1.5em 0px; BORDER-LEFT: medium none; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; MAX-HEIGHT: 35em; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 4px"><CODE class=js style="BOX-SIZING: border-box; FONT-SIZE: 1em; FONT-FAMILY: 'Source Code Pro', Consolas, Menlo, Monaco, 'Courier New', monospace; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; border-radius: 0px; overflow-wrap: normal"><SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> a = [<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">1</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">2</SPAN>,<SPAN class=hljs-number style="BOX-SIZING: border-box; COLOR: rgb(0,128,128)">3</SPAN>];
<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">for</SPAN>(<SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">var</SPAN> value <SPAN class=hljs-keyword style="BOX-SIZING: border-box; FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">of</SPAN> a){
  <SPAN class=hljs-built_in style="BOX-SIZING: border-box; COLOR: rgb(0,134,179)">console</SPAN>.log(value)  <SPAN class=hljs-comment style="BOX-SIZING: border-box; COLOR: rgb(153,153,136); FONT-STYLE: normal">// 结果依次为1，2，3</SPAN>
}</CODE></PRE>
<P 
style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 14px/22px -apple-system, 'Helvetica Neue', Helvetica, Arial, 'PingFang SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Microsoft Yahei', sans-serif; MARGIN: 1.5em 0px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><STRONG 
style="BOX-SIZING: border-box; FONT-WEIGHT: bold"><EM 
style="BOX-SIZING: border-box">代码解读：</EM></STRONG>for...of语句看着有点像for...in语句，但是和for...in语句不同的是它不可以循环对象，只能循环数组。</P></body>
</html>
