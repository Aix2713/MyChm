<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>await async</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Async/Await应该是目前最简单的异步方案了，首先来看个例子。</P>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT color=#ff0000>#：我总结就是同步流的方式，await一个异步方法，等待异步完成之后才继续执行下边的代码！</FONT></P>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">这里我们要实现一个暂停功能，输入N毫秒，则停顿N毫秒后才继续往下执行。</P><PRE class="prettyprint language-js" style="WORD-WRAP: break-word; BORDER-TOP: 1px; BORDER-RIGHT: 0px; BACKGROUND: rgb(247,247,247); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/22px Monaco, Menlo, Consolas, 'Courier New', monospace; PADDING-LEFT: 15px; MARGIN: 20px -10px; BORDER-LEFT: 0px; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; tab-size: 4"><CODE style="FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: 0px; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 0px; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-radius: 3px"><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> sleep </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">time</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">return</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">new</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=typ style="COLOR: rgb(102,0,102)">Promise</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">resolve</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> reject</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        setTimeout</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">()</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
            resolve</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">();</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">},</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> time</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">})</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">};</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> start </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> async </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">()</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 在这里使用起来就像同步代码那样直观</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=str style="COLOR: rgb(0,136,0)">'start'</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    await sleep</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">3000</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=str style="COLOR: rgb(0,136,0)">'end'</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">};</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

start</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">();</SPAN></CODE></PRE>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">控制台先输出<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">start</CODE>，稍等<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">3秒</CODE>后，输出了<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">end</CODE>。</P>
<H2 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 700 26px/40px 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 30px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; text-rendering: optimizeLegibility">基本规则</H2>
<OL 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/28px 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; PADDING-LEFT: 0px; MARGIN: 0px 0px 10px 25px; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
  <LI style="FONT-SIZE: 14px; LINE-HEIGHT: 2em">
  <P 
  style="OVERFLOW: auto; WORD-WRAP: break-word; FONT-SIZE: 15px; WHITE-SPACE: pre-wrap; MARGIN: 1em 0px; LINE-HEIGHT: 1.7em">async 
  表示<CODE 
  style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">这是一个async函数</CODE>，<CODE 
  style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">await只能用在这个函数里面</CODE>。</P>
  <LI style="FONT-SIZE: 14px; LINE-HEIGHT: 2em">
  <P 
  style="OVERFLOW: auto; WORD-WRAP: break-word; FONT-SIZE: 15px; WHITE-SPACE: pre-wrap; MARGIN: 1em 0px; LINE-HEIGHT: 1.7em">await 
  表示在这里<CODE 
  style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">等待promise返回结果</CODE>了，再继续执行。</P>
  <LI style="FONT-SIZE: 14px; LINE-HEIGHT: 2em">
  <P 
  style="OVERFLOW: auto; WORD-WRAP: break-word; FONT-SIZE: 15px; WHITE-SPACE: pre-wrap; MARGIN: 1em 0px; LINE-HEIGHT: 1.7em">await 
  后面跟着的<CODE 
  style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">应该是一个promise对象</CODE>（当然，其他返回值也没关系，只是会立即执行，不过那样就没有意义了…）</P></LI></OL>
<H2 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 700 26px/40px 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 30px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; text-rendering: optimizeLegibility">获得返回值</H2>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">await等待的虽然是promise对象，但不必写<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">.then(..)</CODE>，直接可以得到返回值。</P><PRE class="prettyprint language-js" style="WORD-WRAP: break-word; BORDER-TOP: 1px; BORDER-RIGHT: 0px; BACKGROUND: rgb(247,247,247); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/22px Monaco, Menlo, Consolas, 'Courier New', monospace; PADDING-LEFT: 15px; MARGIN: 20px -10px; BORDER-LEFT: 0px; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; tab-size: 4"><CODE style="FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: 0px; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 0px; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-radius: 3px"><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> sleep </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">time</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">return</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">new</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=typ style="COLOR: rgb(102,0,102)">Promise</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">resolve</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> reject</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        setTimeout</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">()</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
            </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 返回 ‘ok’</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
            resolve</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=str style="COLOR: rgb(0,136,0)">'ok'</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">},</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> time</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">})</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">};</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> start </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> async </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">()</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    let result </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> await sleep</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">3000</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">result</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 收到 ‘ok’</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">};</SPAN></CODE></PRE>
<H2 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 700 26px/40px 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 30px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; text-rendering: optimizeLegibility">捕捉错误</H2>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">既然<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">.then(..)</CODE>不用写了，那么<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">.catch(..)</CODE>也不用写，可以直接用标准的<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">try 
catch</CODE>语法捕捉错误。</P><PRE class="prettyprint language-js" style="WORD-WRAP: break-word; BORDER-TOP: 1px; BORDER-RIGHT: 0px; BACKGROUND: rgb(247,247,247); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/22px Monaco, Menlo, Consolas, 'Courier New', monospace; PADDING-LEFT: 15px; MARGIN: 20px -10px; BORDER-LEFT: 0px; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; tab-size: 4"><CODE style="FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: 0px; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 0px; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-radius: 3px"><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> sleep </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">time</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">return</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">new</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=typ style="COLOR: rgb(102,0,102)">Promise</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">resolve</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> reject</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        setTimeout</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">()</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
            </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 模拟出错了，返回 ‘error’</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
            reject</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=str style="COLOR: rgb(0,136,0)">'error'</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">},</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> time</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">})</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">};</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> start </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> async </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">()</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">try</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=str style="COLOR: rgb(0,136,0)">'start'</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        await sleep</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">3000</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 这里得到了一个返回错误</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        
        </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 所以以下代码不会被执行了</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=str style="COLOR: rgb(0,136,0)">'end'</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">}</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">catch</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">err</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">err</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 这里捕捉到错误 `error`</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">}</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">};</SPAN></CODE></PRE>
<H2 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(238,238,238) 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 700 26px/40px 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 30px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; text-rendering: optimizeLegibility">循环多个await</H2>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">await看起来就像是同步代码，所以可以理所当然的写在<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">for</CODE>循环里，不必担心以往需要<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">闭包</CODE>才能解决的问题。</P><PRE class="prettyprint language-js" style="WORD-WRAP: break-word; BORDER-TOP: 1px; BORDER-RIGHT: 0px; BACKGROUND: rgb(247,247,247); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/22px Monaco, Menlo, Consolas, 'Courier New', monospace; PADDING-LEFT: 15px; MARGIN: 20px -10px; BORDER-LEFT: 0px; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; tab-size: 4"><CODE style="FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: 0px; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 0px; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-radius: 3px"><SPAN class=pun style="COLOR: rgb(102,102,0)">..省略以上代码</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> start </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> async </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">()</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">for</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> i </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">1</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">;</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> i </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">&lt;=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">10</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">;</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> i</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">++)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(`当前是第</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">$</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">i</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">}次等待..`);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
        await sleep</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">1000</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">}</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">};</SPAN></CODE></PRE>
<P 
style="OVERFLOW: auto; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 15px/1.7em 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', Tahoma, 'Hiragino Sans GB', STHeiti, sans-serif; MARGIN: 1em 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">值得注意的是，<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">await</CODE>必须在<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: medium none; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; BACKGROUND: rgb(252,250,250) 0px 0px; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(0,0,0); PADDING-BOTTOM: 4px; PADDING-TOP: 4px; PADDING-LEFT: 6px; MARGIN: 0px 1px; BORDER-LEFT: medium none; PADDING-RIGHT: 6px; border-radius: 1px">async函数的上下文中</CODE>的。</P><PRE class="prettyprint language-js" style="WORD-WRAP: break-word; BORDER-TOP: 1px; BORDER-RIGHT: 0px; BACKGROUND: rgb(247,247,247); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; FONT: 14px/22px Monaco, Menlo, Consolas, 'Courier New', monospace; PADDING-LEFT: 15px; MARGIN: 20px -10px; BORDER-LEFT: 0px; WIDOWS: 1; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 15px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0px; tab-size: 4"><CODE style="FONT-SIZE: 12px; BORDER-TOP: 0px; FONT-FAMILY: Monaco, Menlo, Consolas, 'Courier New', monospace; BORDER-RIGHT: 0px; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: 0px; COLOR: ; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-radius: 3px"><SPAN class=pun style="COLOR: rgb(102,102,0)">..省略以上代码</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

let </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">一到十</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">=</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">[</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">1</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">2</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">3</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">4</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">5</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">6</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">7</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">8</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">9</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">,</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">10</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">];</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

</SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 错误示范</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">一到十.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">forEach</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">function</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">v</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(`当前是第</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">$</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">v</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">}次等待..`);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    await sleep</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">1000</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 错误!! await只能在async函数中运行</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">});</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">

</SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 正确示范</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">for</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=kwd style="COLOR: rgb(0,0,136)">var</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> v of </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">一到十)</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    console</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">.</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">log</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(`当前是第</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">$</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">{</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">v</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">}次等待..`);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
    await sleep</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">(</SPAN><SPAN class=lit style="COLOR: rgb(0,102,102)">1000</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">);</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)"> </SPAN><SPAN class=com style="COLOR: rgb(136,0,0)">// 正确, for循环的上下文还在async函数中</SPAN><SPAN class=pln style="COLOR: rgb(0,0,0)">
</SPAN><SPAN class=pun style="COLOR: rgb(102,102,0)">}</SPAN></CODE></PRE></body>
</html>
