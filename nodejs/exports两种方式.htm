<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>exports两种方式</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<H3 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); FONT: 18px/24px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 25px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">module.exports 
vs exports</H3>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">很多时候，你会看到，在Node环境中，有两种方法可以在一个模块中输出变量：</P>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">方法一：对module.exports赋值：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript><SPAN class=comment style="COLOR: rgb(153,153,136); FONT-STYLE: italic">// hello.js</SPAN>

<SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=title style="FONT-WEIGHT: normal; COLOR: rgb(51,51,51)">hello</SPAN><SPAN class=params>()</SPAN> {</SPAN>
    console.log(<SPAN class=string style="COLOR: rgb(221,17,68)">'Hello, world!'</SPAN>);
}

<SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=title style="FONT-WEIGHT: normal; COLOR: rgb(51,51,51)">greet</SPAN><SPAN class=params>(name)</SPAN> {</SPAN>
    console.log(<SPAN class=string style="COLOR: rgb(221,17,68)">'Hello, '</SPAN> + name + <SPAN class=string style="COLOR: rgb(221,17,68)">'!'</SPAN>);
}

module.exports = {
    hello: hello,
    greet: greet
};
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">方法二：直接使用exports：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript><SPAN class=comment style="COLOR: rgb(153,153,136); FONT-STYLE: italic">// hello.js</SPAN>

<SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=title style="FONT-WEIGHT: normal; COLOR: rgb(51,51,51)">hello</SPAN><SPAN class=params>()</SPAN> {</SPAN>
    console.log(<SPAN class=string style="COLOR: rgb(221,17,68)">'Hello, world!'</SPAN>);
}

<SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=title style="FONT-WEIGHT: normal; COLOR: rgb(51,51,51)">greet</SPAN><SPAN class=params>(name)</SPAN> {</SPAN>
    console.log(<SPAN class=string style="COLOR: rgb(221,17,68)">'Hello, '</SPAN> + name + <SPAN class=string style="COLOR: rgb(221,17,68)">'!'</SPAN>);
}

<SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=title style="FONT-WEIGHT: normal; COLOR: rgb(51,51,51)">hello</SPAN><SPAN class=params>()</SPAN> {</SPAN>
    console.log(<SPAN class=string style="COLOR: rgb(221,17,68)">'Hello, world!'</SPAN>);
}

exports.hello = hello;
exports.greet = greet;
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">但是你不可以直接对<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">exports</CODE>赋值：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript><SPAN class=comment style="COLOR: rgb(153,153,136); FONT-STYLE: italic">// 代码可以执行，但是模块并没有输出任何变量:</SPAN>
exports = {
    hello: hello,
    greet: greet
};
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">如果你对上面的写法感到十分困惑，不要着急，我们来分析Node的加载机制：</P>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">首先，Node会把整个待加载的<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">hello.js</CODE>文件放入一个包装函数<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">load</CODE>中执行。在执行这个<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">load()</CODE>函数前，Node准备好了module变量：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=ruby>var <SPAN class=class style="FONT-WEIGHT: bold; COLOR: rgb(68,85,136)"><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">module</SPAN> = {</SPAN>
    <SPAN class=symbol style="COLOR: rgb(153,0,115)">id:</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'hello'</SPAN>,
    <SPAN class=symbol style="COLOR: rgb(153,0,115)">exports:</SPAN> {}
};
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">load()</CODE>函数最终返回<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">module.exports</CODE>：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=sql>var <SPAN class=operator><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">load</SPAN> = function (exports, <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">module</SPAN>) {
    // hello.js的文件内容
    ...
    // <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">load</SPAN>函数返回:
    return <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">module</SPAN>.exports;</SPAN>
};

var exported = <SPAN class=operator><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">load</SPAN>(<SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">module</SPAN>.exports, <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">module</SPAN>);</SPAN>
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">也就是说，默认情况下，Node准备的<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">exports</CODE>变量和<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">module.exports</CODE>变量实际上是同一个变量，并且初始化为空对象<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">{}</CODE>，于是，我们可以写：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript>exports.foo = <SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=params>()</SPAN> {</SPAN> <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'foo'</SPAN>; };
exports.bar = <SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=params>()</SPAN> {</SPAN> <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'bar'</SPAN>; };
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">也可以写：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript>module.exports.foo = <SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=params>()</SPAN> {</SPAN> <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'foo'</SPAN>; };
module.exports.bar = <SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=params>()</SPAN> {</SPAN> <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'bar'</SPAN>; };
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">换句话说，Node默认给你准备了一个空对象<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">{}</CODE>，这样你可以直接往里面加东西。</P>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">但是，如果我们要输出的是一个函数或数组，那么，只能给<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">module.exports</CODE>赋值：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript>module.exports = <SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=params>()</SPAN> {</SPAN> <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'foo'</SPAN>; };
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">给<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">exports</CODE>赋值是无效的，因为赋值后，<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">module.exports</CODE>仍然是空对象<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">{}</CODE>。</P>
<H3 
style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(68,68,68); FONT: 18px/24px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 25px 0px 15px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><A 
name=#-E7-BB-93-E8-AE-BA></A>结论</H3>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">如果要输出一个键值对象<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">{}</CODE>，可以利用<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">exports</CODE>这个已存在的空对象<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">{}</CODE>，并继续在上面添加新的键值；</P>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">如果要输出一个函数或数组，必须直接对<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">module.exports</CODE>对象赋值。</P>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">所以我们可以得出结论：直接对<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">module.exports</CODE>赋值，可以应对任何情况：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript>module.exports = {
    foo: <SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=params>()</SPAN> {</SPAN> <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'foo'</SPAN>; }
};
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">或者：</P><PRE style="OVERFLOW: auto; WORD-WRAP: break-word; BORDER-TOP: rgb(221,221,221) 1px solid; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; TEXT-TRANSFORM: none; WORD-BREAK: break-all; COLOR: rgb(68,68,68); PADDING-BOTTOM: 10px; PADDING-TOP: 10px; FONT: 12px/18px Consolas, monospace, serif; PADDING-LEFT: 10px; MARGIN: 15px 0px; BORDER-LEFT: rgb(221,221,221) 1px solid; WIDOWS: 1; LETTER-SPACING: normal; PADDING-RIGHT: 10px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; font-stretch: normal; tab-size: 4; border-radius: 3px"><CODE class=javascript>module.exports = <SPAN class=function><SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">function</SPAN> <SPAN class=params>()</SPAN> {</SPAN> <SPAN class=keyword style="FONT-WEIGHT: bold; COLOR: rgb(51,51,51)">return</SPAN> <SPAN class=string style="COLOR: rgb(221,17,68)">'foo'</SPAN>; };
</CODE></PRE>
<P 
style="WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(102,102,102); FONT: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 15px 0px; WIDOWS: 1; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">最终，我们<EM 
style="COLOR: rgb(221,0,85)">强烈建议</EM>使用<CODE 
style="FONT-SIZE: 12px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, monospace, serif; BORDER-RIGHT: rgb(221,221,221) 1px solid; BACKGROUND: rgb(250,250,250); WHITE-SPACE: nowrap; BORDER-BOTTOM: rgb(221,221,221) 1px solid; COLOR: rgb(221,0,85); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(221,221,221) 1px solid; PADDING-RIGHT: 4px; border-radius: 3px">module.exports 
= xxx</CODE>的方式来输出模块变量，这样，你只需要记忆一种方法。</P></body>
</html>
